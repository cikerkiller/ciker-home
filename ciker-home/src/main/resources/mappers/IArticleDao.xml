<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hf.ciker.dao.IArticleDao" >
  
  <sql id="baseInsertSql" >
    
		CLASSIFY_ID	,
		
		ARTICLE_TITLE,
	
		CONTENT,
		
		CREATION_BY ,
	
		LAST_UPDATE_BY 

  </sql>
  <sql id="baseSql" >
    
    	ARTICLE_ID 			as articleId,
    	
		CLASSIFY_ID			as classifyId,
		
		ARTICLE_TITLE 		as articleTitle,
	
		CONTENT		as content,
	
		CREATION_DATE 		as creationDate,
	
		CREATION_BY 		as creationBy,
	
		LAST_UPDATE_DATE 	as lastUpdateDate,
	
		LAST_UPDATE_BY 		as lastUpdateBy,
	
		STATUS 				as status,
    	
    	VIEWING_COUNT		as viewingCount
  </sql>
  <select id="commonQueryArticles" resultType="com.hf.ciker.vo.ArticleVO">
	    select 
	    ARTICLE_ID 			as articleId,
    	
		CLASSIFY_ID			as classifyId,
		
		ARTICLE_TITLE 		as articleTitle,
	
		CONCAT(REPLACE(LEFT(CONTENT,100)," ",""),'...')			as content,
	
		CREATION_DATE 		as creationDate,
	
		CREATION_BY 		as creationBy,
	
		LAST_UPDATE_DATE 	as lastUpdateDate,
	
		LAST_UPDATE_BY 		as lastUpdateBy,
	
		STATUS 				as status,
    	
    	VIEWING_COUNT		as viewingCount
	    from CH_ARTICLE
  </select>
  <select id="detailsQueryArticles" resultType="com.hf.ciker.vo.DetailsArticleVO">
	      SELECT 
		    t1.ARTICLE_ID as articleId,
		    t6.classify_name as classifyName,
		    t1.ARTICLE_TITLE as articleTitle,
		    t1.CREATION_DATE as creationDate,
		    t4.creator as creatior,
		    t1.LAST_UPDATE_DATE as lastUpdateDate,
		    t5.lastupdateor as lastUpdator,
		    t1.STATUS as status,
		    t1.RECOMMEND as recommend,
		    t1.VIEWING_COUNT as viewingCount,
		    t2.LIKE_NUMBER as likeNumber,
		    t3.comment_number as commentNumber
		 FROM CH_ARTICLE t1
		LEFT JOIN  
		 CH_ARTICLE_LIKE t2 ON  t1.ARTICLE_ID=t2.ARTICLE_ID 
		 LEFT JOIN 
		(SELECT ARTICLE_ID,COUNT(COMMENT_CONTENT) AS COMMENT_NUMBER FROM CH_ARTICLE_COMMENT GROUP BY ARTICLE_ID) t3 ON t1.ARTICLE_ID=t3.ARTICLE_ID
		LEFT JOIN 
		(SELECT USER_ID,USERNAME AS creator FROM CH_USER) t4 ON t1.CREATION_BY AND t4.user_id
		LEFT JOIN 
		(SELECT USER_ID,USERNAME  AS lastupdateor FROM CH_USER) t5 ON t1.LAST_UPDATE_BY=t5.user_id
		LEFT JOIN 
		(SELECT classify_id ,classify_name FROM CH_CLASSIFY_INFO) t6 ON t1.classify_id=t6.classify_id
		WHERE STATUS &lt;&gt; -1 order by  t1.LAST_UPDATE_DATE desc
  </select>
  <select id="selectArticleById" resultType="com.hf.ciker.vo.ArticleVO" parameterType="long">
	    select 
	    <include refid="baseSql" />
	    from CH_ARTICLE where ARTICLE_ID = #{articleId,jdbcType=BIGINT}
  </select>
  
  <!-- 模糊查询 -->
  <select id="selectArticleByMatch" resultType="com.hf.ciker.vo.ArticleVO" parameterType="java.lang.String">
	    select 
	    <include refid="baseSql" /> 
	    from CH_ARTICLE where 
	    	ARTICLE_TITLE LIKE CONCAT('%',#{articleTitle,jdbcType=VARCHAR},'%')
	    OR
	    	CONTENT LIKE CONCAT('%',#{content,jdbcType=LONGVARCHAR},'%')
  </select>
  <select id="selectArticleByName" resultType="com.hf.ciker.vo.ArticleVO" parameterType="java.lang.String">
	    select 
	    <include refid="baseSql" /> 
	    from CH_ARTICLE where 
	    	ARTICLE_TITLE LIKE CONCAT('%',#{articleTitle,jdbcType=VARCHAR},'%')
  </select>
  
  <update id="deleteArticle" parameterType="long">
		update CH_ARTICLE set STATUS=-1 where ARTICLE_ID = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="batchDeleteArticle" parameterType="list">
		update CH_ARTICLE set STATUS=-1 where ARTICLE_ID in
 		<foreach collection="articleIds" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
  </update>
  
  
  <update id="updateArticle" parameterType="com.hf.ciker.vo.ArticleVO" >
	    update CH_ARTICLE
	    <set >
	      <if test="classifyId != null" >
	        CLASSIFY_ID = #{classifyId,jdbcType=BIGINT},
	      </if>
	      <if test="articleTitle != null" >
	        ARTICLE_TITLE = #{articleTitle,jdbcType=VARCHAR},
	      </if>
	      <if test="content != null" >
	        CONTENT = #{content,jdbcType=LONGVARCHAR},
	      </if>
	      <if test="lastUpdateDate != null" >
	        LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="lastUpdateBy != null" >
	        LAST_UPDATE_BY = #{lastUpdateBy,jdbcType=BIGINT},
	      </if>
	      <if test="status != null" >
	        STATUS = #{status,jdbcType=INTEGER},
	      </if>
	      <if test="recommend != null" >
	        RECOMMEND = #{recommend,jdbcType=INTEGER},
	      </if>
	    </set>
	    where ARTICLE_ID = #{articleId,jdbcType=BIGINT}
  </update>
  
  <update id="updateViewingCount">
  	update CH_ARTICLE set VIEWING_COUNT = #{viewingCount,jdbcType=INTEGER} where  ARTICLE_ID = #{articleId,jdbcType=BIGINT}
  </update>
  
  <select id="selectViewingCount" resultType="long">
  	select VIEWING_COUNT from CH_ARTICLE where ARTICLE_ID = #{articleId,jdbcType=BIGINT}
  </select>
  
  <insert id="addArticle" parameterType="com.hf.ciker.vo.ArticleVO" useGeneratedKeys="true" keyProperty="id">
    insert into CH_ARTICLE (  <include refid="baseInsertSql" /> )
    values (#{classifyId,jdbcType=BIGINT},  #{articleTitle,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR},#{creationBy,jdbcType=BIGINT},#{lastUpdateBy,jdbcType=BIGINT})
  </insert>

  <select id="queryHotRank" resultType="com.hf.ciker.vo.HotRankVO">
  	 SELECT 
 		@rowno:=@rowno+1 AS rank,
	    ARTICLE_ID 			AS articleId,
    	
		ARTICLE_TITLE 		AS articleTitle,
	
    	VIEWING_COUNT		AS viewingCount
	    FROM CH_ARTICLE,(SELECT @rowno:=0) t ORDER BY VIEWING_COUNT DESC LIMIT 5
  </select>
  <select id="queryRecommendArticle" resultType="com.hf.ciker.vo.ArticleVO">
  	 SELECT 
	    ARTICLE_ID 			AS articleId,
    	
		ARTICLE_TITLE 		AS articleTitle
	
	    FROM CH_ARTICLE where RECOMMEND=1 ORDER BY LAST_UPDATE_DATE DESC LIMIT 10
  </select>
  <select id="selectArticleDetailsById" resultType="com.hf.ciker.vo.ArticleVO">
  	 SELECT 
	    ARTICLE_ID 			AS articleId,
    	CLASSIFY_ID			as classifyId,
		ARTICLE_TITLE 		AS articleTitle,
		CONTENT				as content
	    FROM CH_ARTICLE  where ARTICLE_ID = #{articleId,jdbcType=BIGINT}
  </select>
  

  
  
  </mapper>
  